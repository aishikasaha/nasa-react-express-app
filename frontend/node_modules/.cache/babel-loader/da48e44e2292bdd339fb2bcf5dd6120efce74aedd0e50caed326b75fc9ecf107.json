{"ast":null,"code":"import{Howl}from'howler';class SoundManager{constructor(){this.sounds={};this.volume=0.3;this.enabled=true;// Initialize sounds\nthis.loadSounds();}loadSounds(){// Create sound effects using Web Audio API\nthis.sounds={click:this.createTone(800,0.1),hover:this.createTone(600,0.05),success:this.createTone([523,659,784],0.3),error:this.createTone([400,300],0.2),whoosh:this.createWhiteNoise(0.1),space:this.createSpaceAmbient()};}createTone(frequencies,duration){return()=>{if(!this.enabled)return;const audioContext=new(window.AudioContext||window.webkitAudioContext)();const freqArray=Array.isArray(frequencies)?frequencies:[frequencies];freqArray.forEach((freq,index)=>{const oscillator=audioContext.createOscillator();const gainNode=audioContext.createGain();oscillator.connect(gainNode);gainNode.connect(audioContext.destination);oscillator.frequency.setValueAtTime(freq,audioContext.currentTime);oscillator.type='sine';gainNode.gain.setValueAtTime(0,audioContext.currentTime);gainNode.gain.linearRampToValueAtTime(this.volume*0.1,audioContext.currentTime+0.01);gainNode.gain.exponentialRampToValueAtTime(0.001,audioContext.currentTime+duration);oscillator.start(audioContext.currentTime+index*0.1);oscillator.stop(audioContext.currentTime+duration+index*0.1);});};}createWhiteNoise(duration){return()=>{if(!this.enabled)return;const audioContext=new(window.AudioContext||window.webkitAudioContext)();const bufferSize=audioContext.sampleRate*duration;const buffer=audioContext.createBuffer(1,bufferSize,audioContext.sampleRate);const output=buffer.getChannelData(0);for(let i=0;i<bufferSize;i++){output[i]=Math.random()*2-1;}const whiteNoise=audioContext.createBufferSource();const gainNode=audioContext.createGain();whiteNoise.buffer=buffer;whiteNoise.connect(gainNode);gainNode.connect(audioContext.destination);gainNode.gain.setValueAtTime(this.volume*0.05,audioContext.currentTime);gainNode.gain.exponentialRampToValueAtTime(0.001,audioContext.currentTime+duration);whiteNoise.start();};}createSpaceAmbient(){return()=>{if(!this.enabled)return;const audioContext=new(window.AudioContext||window.webkitAudioContext)();const oscillator1=audioContext.createOscillator();const oscillator2=audioContext.createOscillator();const gainNode=audioContext.createGain();oscillator1.connect(gainNode);oscillator2.connect(gainNode);gainNode.connect(audioContext.destination);oscillator1.frequency.setValueAtTime(110,audioContext.currentTime);oscillator2.frequency.setValueAtTime(165,audioContext.currentTime);oscillator1.type='sine';oscillator2.type='triangle';gainNode.gain.setValueAtTime(0,audioContext.currentTime);gainNode.gain.linearRampToValueAtTime(this.volume*0.02,audioContext.currentTime+1);gainNode.gain.linearRampToValueAtTime(0,audioContext.currentTime+3);oscillator1.start();oscillator2.start();oscillator1.stop(audioContext.currentTime+3);oscillator2.stop(audioContext.currentTime+3);};}play(soundName){if(this.sounds[soundName]&&this.enabled){this.sounds[soundName]();}}setVolume(volume){this.volume=Math.max(0,Math.min(1,volume));}toggle(){this.enabled=!this.enabled;return this.enabled;}isEnabled(){return this.enabled;}}export default new SoundManager();","map":{"version":3,"names":["Howl","SoundManager","constructor","sounds","volume","enabled","loadSounds","click","createTone","hover","success","error","whoosh","createWhiteNoise","space","createSpaceAmbient","frequencies","duration","audioContext","window","AudioContext","webkitAudioContext","freqArray","Array","isArray","forEach","freq","index","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","setValueAtTime","currentTime","type","gain","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","bufferSize","sampleRate","buffer","createBuffer","output","getChannelData","i","Math","random","whiteNoise","createBufferSource","oscillator1","oscillator2","play","soundName","setVolume","max","min","toggle","isEnabled"],"sources":["/Users/aishikasaha/Documents/nasa-react-express-app/frontend/src/utils/soundManager.js"],"sourcesContent":["import { Howl } from 'howler';\n\nclass SoundManager {\n  constructor() {\n    this.sounds = {};\n    this.volume = 0.3;\n    this.enabled = true;\n    \n    // Initialize sounds\n    this.loadSounds();\n  }\n\n  loadSounds() {\n    // Create sound effects using Web Audio API\n    this.sounds = {\n      click: this.createTone(800, 0.1),\n      hover: this.createTone(600, 0.05),\n      success: this.createTone([523, 659, 784], 0.3),\n      error: this.createTone([400, 300], 0.2),\n      whoosh: this.createWhiteNoise(0.1),\n      space: this.createSpaceAmbient()\n    };\n  }\n\n  createTone(frequencies, duration) {\n    return () => {\n      if (!this.enabled) return;\n      \n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const freqArray = Array.isArray(frequencies) ? frequencies : [frequencies];\n      \n      freqArray.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        \n        oscillator.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n        \n        oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n        oscillator.type = 'sine';\n        \n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(this.volume * 0.1, audioContext.currentTime + 0.01);\n        gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration);\n        \n        oscillator.start(audioContext.currentTime + index * 0.1);\n        oscillator.stop(audioContext.currentTime + duration + index * 0.1);\n      });\n    };\n  }\n\n  createWhiteNoise(duration) {\n    return () => {\n      if (!this.enabled) return;\n      \n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const bufferSize = audioContext.sampleRate * duration;\n      const buffer = audioContext.createBuffer(1, bufferSize, audioContext.sampleRate);\n      const output = buffer.getChannelData(0);\n      \n      for (let i = 0; i < bufferSize; i++) {\n        output[i] = Math.random() * 2 - 1;\n      }\n      \n      const whiteNoise = audioContext.createBufferSource();\n      const gainNode = audioContext.createGain();\n      \n      whiteNoise.buffer = buffer;\n      whiteNoise.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      \n      gainNode.gain.setValueAtTime(this.volume * 0.05, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration);\n      \n      whiteNoise.start();\n    };\n  }\n\n  createSpaceAmbient() {\n    return () => {\n      if (!this.enabled) return;\n      \n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const oscillator1 = audioContext.createOscillator();\n      const oscillator2 = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      \n      oscillator1.connect(gainNode);\n      oscillator2.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      \n      oscillator1.frequency.setValueAtTime(110, audioContext.currentTime);\n      oscillator2.frequency.setValueAtTime(165, audioContext.currentTime);\n      oscillator1.type = 'sine';\n      oscillator2.type = 'triangle';\n      \n      gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n      gainNode.gain.linearRampToValueAtTime(this.volume * 0.02, audioContext.currentTime + 1);\n      gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 3);\n      \n      oscillator1.start();\n      oscillator2.start();\n      oscillator1.stop(audioContext.currentTime + 3);\n      oscillator2.stop(audioContext.currentTime + 3);\n    };\n  }\n\n  play(soundName) {\n    if (this.sounds[soundName] && this.enabled) {\n      this.sounds[soundName]();\n    }\n  }\n\n  setVolume(volume) {\n    this.volume = Math.max(0, Math.min(1, volume));\n  }\n\n  toggle() {\n    this.enabled = !this.enabled;\n    return this.enabled;\n  }\n\n  isEnabled() {\n    return this.enabled;\n  }\n}\n\nexport default new SoundManager();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}