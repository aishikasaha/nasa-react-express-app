{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{nasaAPI}from'../services/api';export const useAPOD=function(){let date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const[data,setData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchAPOD=useCallback(async function(){let selectedDate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:date;setLoading(true);setError(null);try{const response=await nasaAPI.getAPOD(selectedDate);setData(response.data.data);}catch(err){setError(err.message||'Failed to fetch APOD');}finally{setLoading(false);}},[date]);useEffect(()=>{fetchAPOD();},[fetchAPOD]);const getRandomAPOD=async()=>{setLoading(true);setError(null);try{const response=await nasaAPI.getRandomAPOD();setData(response.data.data);}catch(err){setError(err.message||'Failed to fetch random APOD');}finally{setLoading(false);}};return{data,loading,error,refetch:fetchAPOD,getRandomAPOD};};export const useMarsPhotos=function(){let rover=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'curiosity';let sol=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1000;const[data,setData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchPhotos=useCallback(async function(){let selectedRover=arguments.length>0&&arguments[0]!==undefined?arguments[0]:rover;let selectedSol=arguments.length>1&&arguments[1]!==undefined?arguments[1]:sol;setLoading(true);setError(null);try{const response=await nasaAPI.getMarsPhotos(selectedRover,selectedSol);setData(response.data.data.photos||[]);}catch(err){setError(err.message||'Failed to fetch Mars photos');}finally{setLoading(false);}},[rover,sol]);useEffect(()=>{fetchPhotos();},[fetchPhotos]);return{data,loading,error,refetch:fetchPhotos};};export const useNearEarthObjects=(startDate,endDate)=>{const[data,setData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchNEOs=useCallback(async()=>{if(!startDate||!endDate)return;setLoading(true);setError(null);try{const response=await nasaAPI.getNearEarthObjects(startDate,endDate);setData(response.data.data);}catch(err){setError(err.message||'Failed to fetch NEO data');}finally{setLoading(false);}},[startDate,endDate]);useEffect(()=>{fetchNEOs();},[fetchNEOs]);return{data,loading,error,refetch:fetchNEOs};};","map":{"version":3,"names":["useState","useEffect","useCallback","nasaAPI","useAPOD","date","arguments","length","undefined","data","setData","loading","setLoading","error","setError","fetchAPOD","selectedDate","response","getAPOD","err","message","getRandomAPOD","refetch","useMarsPhotos","rover","sol","fetchPhotos","selectedRover","selectedSol","getMarsPhotos","photos","useNearEarthObjects","startDate","endDate","fetchNEOs","getNearEarthObjects"],"sources":["/Users/aishikasaha/Documents/nasa-react-express-app/frontend/src/hooks/useNasaData.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { nasaAPI } from '../services/api';\n\nexport const useAPOD = (date = null) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchAPOD = useCallback(async (selectedDate = date) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getAPOD(selectedDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch APOD');\n    } finally {\n      setLoading(false);\n    }\n  }, [date]);\n\n  useEffect(() => {\n    fetchAPOD();\n  }, [fetchAPOD]);\n\n  const getRandomAPOD = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getRandomAPOD();\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch random APOD');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, refetch: fetchAPOD, getRandomAPOD };\n};\n\nexport const useMarsPhotos = (rover = 'curiosity', sol = 1000) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchPhotos = useCallback(async (selectedRover = rover, selectedSol = sol) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getMarsPhotos(selectedRover, selectedSol);\n      setData(response.data.data.photos || []);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch Mars photos');\n    } finally {\n      setLoading(false);\n    }\n  }, [rover, sol]);\n\n  useEffect(() => {\n    fetchPhotos();\n  }, [fetchPhotos]);\n\n  return { data, loading, error, refetch: fetchPhotos };\n};\n\nexport const useNearEarthObjects = (startDate, endDate) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchNEOs = useCallback(async () => {\n    if (!startDate || !endDate) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getNearEarthObjects(startDate, endDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch NEO data');\n    } finally {\n      setLoading(false);\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    fetchNEOs();\n  }, [fetchNEOs]);\n\n  return { data, loading, error, refetch: fetchNEOs };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}