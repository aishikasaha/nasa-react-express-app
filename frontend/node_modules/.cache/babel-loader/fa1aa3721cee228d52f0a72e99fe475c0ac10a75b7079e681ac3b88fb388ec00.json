{"ast":null,"code":"// Using Hugging Face's free inference API\nclass AIService{constructor(){this.HF_API_URL='https://api-inference.huggingface.co/models';this.isLoading=false;}// Image captioning using BLIP model (free)\nasync analyzeImage(imageUrl){try{var _data$;this.isLoading=true;// Convert image URL to blob\nconst response=await fetch(imageUrl);const blob=await response.blob();// Send to Hugging Face API\nconst result=await fetch(\"\".concat(this.HF_API_URL,\"/Salesforce/blip-image-captioning-large\"),{method:'POST',body:blob,headers:{'Content-Type':'application/octet-stream'}});const data=await result.json();return((_data$=data[0])===null||_data$===void 0?void 0:_data$.generated_text)||'Unable to analyze image';}catch(error){console.error('AI Image Analysis Error:',error);return'AI analysis temporarily unavailable';}finally{this.isLoading=false;}}// Text summarization using free model\nasync summarizeText(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;try{var _data$2;if(text.length<maxLength)return text;const response=await fetch(\"\".concat(this.HF_API_URL,\"/facebook/bart-large-cnn\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({inputs:text,parameters:{max_length:maxLength,min_length:20}})});const data=await response.json();return((_data$2=data[0])===null||_data$2===void 0?void 0:_data$2.summary_text)||text;}catch(error){console.error('AI Summarization Error:',error);return text;}}// Sentiment analysis for text\nasync analyzeSentiment(text){try{const response=await fetch(\"\".concat(this.HF_API_URL,\"/cardiffnlp/twitter-roberta-base-sentiment-latest\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({inputs:text})});const data=await response.json();return data[0]||{label:'NEUTRAL',score:0.5};}catch(error){console.error('AI Sentiment Analysis Error:',error);return{label:'NEUTRAL',score:0.5};}}// Local browser-based text analysis (no API needed)\nanalyzeTextComplexity(text){const words=text.split(/\\s+/).length;const sentences=text.split(/[.!?]+/).length;const avgWordsPerSentence=words/sentences;let complexity='Simple';if(avgWordsPerSentence>15)complexity='Moderate';if(avgWordsPerSentence>25)complexity='Complex';return{wordCount:words,sentenceCount:sentences,avgWordsPerSentence:Math.round(avgWordsPerSentence),complexity};}// Generate astronomy-related suggestions\ngenerateAstronomyTips(topic){const tips={nebula:[\"🔭 Try viewing nebulae with different filters to see various elements\",\"🌟 Nebulae are stellar nurseries where new stars are born\",\"📊 The colors in nebulae indicate different chemical elements\"],galaxy:[\"🌌 Our Milky Way contains over 100 billion stars\",\"🔄 Galaxies rotate, with spiral arms moving like waves\",\"🎯 Look for the galaxy's central black hole in deep images\"],planet:[\"🪐 Each planet has unique atmospheric conditions\",\"🌡️ Temperature varies greatly across planetary surfaces\",\"🔍 Study surface features to understand geological history\"],mars:[\"🚀 Mars has the largest volcano in the solar system\",\"❄️ Mars has polar ice caps made of water and dry ice\",\"🌪️ Dust storms on Mars can last for months\"],default:[\"⭐ Use dark sky locations for better astronomical viewing\",\"📱 Try astronomy apps to identify objects in the night sky\",\"🌙 The best viewing is often just after sunset or before sunrise\"]};const key=Object.keys(tips).find(k=>topic.toLowerCase().includes(k))||'default';return tips[key];}}export default new AIService();","map":{"version":3,"names":["AIService","constructor","HF_API_URL","isLoading","analyzeImage","imageUrl","_data$","response","fetch","blob","result","concat","method","body","headers","data","json","generated_text","error","console","summarizeText","text","maxLength","arguments","length","undefined","_data$2","JSON","stringify","inputs","parameters","max_length","min_length","summary_text","analyzeSentiment","label","score","analyzeTextComplexity","words","split","sentences","avgWordsPerSentence","complexity","wordCount","sentenceCount","Math","round","generateAstronomyTips","topic","tips","nebula","galaxy","planet","mars","default","key","Object","keys","find","k","toLowerCase","includes"],"sources":["/Users/aishikasaha/Documents/nasa-react-express-app/frontend/src/services/aiService.js"],"sourcesContent":["// Using Hugging Face's free inference API\nclass AIService {\n  constructor() {\n    this.HF_API_URL = 'https://api-inference.huggingface.co/models';\n    this.isLoading = false;\n  }\n\n  // Image captioning using BLIP model (free)\n  async analyzeImage(imageUrl) {\n    try {\n      this.isLoading = true;\n      \n      // Convert image URL to blob\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      \n      // Send to Hugging Face API\n      const result = await fetch(`${this.HF_API_URL}/Salesforce/blip-image-captioning-large`, {\n        method: 'POST',\n        body: blob,\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        }\n      });\n      \n      const data = await result.json();\n      return data[0]?.generated_text || 'Unable to analyze image';\n    } catch (error) {\n      console.error('AI Image Analysis Error:', error);\n      return 'AI analysis temporarily unavailable';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  // Text summarization using free model\n  async summarizeText(text, maxLength = 100) {\n    try {\n      if (text.length < maxLength) return text;\n      \n      const response = await fetch(`${this.HF_API_URL}/facebook/bart-large-cnn`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          inputs: text,\n          parameters: {\n            max_length: maxLength,\n            min_length: 20\n          }\n        })\n      });\n      \n      const data = await response.json();\n      return data[0]?.summary_text || text;\n    } catch (error) {\n      console.error('AI Summarization Error:', error);\n      return text;\n    }\n  }\n\n  // Sentiment analysis for text\n  async analyzeSentiment(text) {\n    try {\n      const response = await fetch(`${this.HF_API_URL}/cardiffnlp/twitter-roberta-base-sentiment-latest`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ inputs: text })\n      });\n      \n      const data = await response.json();\n      return data[0] || { label: 'NEUTRAL', score: 0.5 };\n    } catch (error) {\n      console.error('AI Sentiment Analysis Error:', error);\n      return { label: 'NEUTRAL', score: 0.5 };\n    }\n  }\n\n  \n  // Local browser-based text analysis (no API needed)\n  analyzeTextComplexity(text) {\n    const words = text.split(/\\s+/).length;\n    const sentences = text.split(/[.!?]+/).length;\n    const avgWordsPerSentence = words / sentences;\n    \n    let complexity = 'Simple';\n    if (avgWordsPerSentence > 15) complexity = 'Moderate';\n    if (avgWordsPerSentence > 25) complexity = 'Complex';\n    \n    return {\n      wordCount: words,\n      sentenceCount: sentences,\n      avgWordsPerSentence: Math.round(avgWordsPerSentence),\n      complexity\n    };\n  }\n\n  // Generate astronomy-related suggestions\n  generateAstronomyTips(topic) {\n    const tips = {\n      nebula: [\n        \"🔭 Try viewing nebulae with different filters to see various elements\",\n        \"🌟 Nebulae are stellar nurseries where new stars are born\",\n        \"📊 The colors in nebulae indicate different chemical elements\"\n      ],\n      galaxy: [\n        \"🌌 Our Milky Way contains over 100 billion stars\",\n        \"🔄 Galaxies rotate, with spiral arms moving like waves\",\n        \"🎯 Look for the galaxy's central black hole in deep images\"\n      ],\n      planet: [\n        \"🪐 Each planet has unique atmospheric conditions\",\n        \"🌡️ Temperature varies greatly across planetary surfaces\",\n        \"🔍 Study surface features to understand geological history\"\n      ],\n      mars: [\n        \"🚀 Mars has the largest volcano in the solar system\",\n        \"❄️ Mars has polar ice caps made of water and dry ice\",\n        \"🌪️ Dust storms on Mars can last for months\"\n      ],\n      default: [\n        \"⭐ Use dark sky locations for better astronomical viewing\",\n        \"📱 Try astronomy apps to identify objects in the night sky\",\n        \"🌙 The best viewing is often just after sunset or before sunrise\"\n      ]\n    };\n    \n    const key = Object.keys(tips).find(k => topic.toLowerCase().includes(k)) || 'default';\n    return tips[key];\n  }\n}\n\nexport default new AIService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}