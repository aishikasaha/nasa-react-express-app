{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429) {\n    throw new Error('Rate limit exceeded. Please try again later.');\n  }\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n    throw new Error('Server error. Please try again later.');\n  }\n  throw error;\n});\n\n// API methods\nexport const nasaAPI = {\n  // APOD endpoints\n  getAPOD: date => api.get('/apod', {\n    params: {\n      date\n    }\n  }),\n  getRandomAPOD: () => api.get('/apod/random'),\n  // Mars rover endpoints\n  getMarsPhotos: (rover, sol, page) => api.get('/mars/photos', {\n    params: {\n      rover,\n      sol,\n      page\n    }\n  }),\n  // Near Earth Objects\n  getNearEarthObjects: (startDate, endDate) => api.get('/neo', {\n    params: {\n      start_date: startDate,\n      end_date: endDate\n    }\n  }),\n  // NASA Library search\n  searchLibrary: (query, mediaType) => api.get('/search', {\n    params: {\n      q: query,\n      media_type: mediaType\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","_error$response2","_error$response3","data","message","status","Error","nasaAPI","getAPOD","date","get","params","getRandomAPOD","getMarsPhotos","rover","sol","page","getNearEarthObjects","startDate","endDate","start_date","end_date","searchLibrary","query","mediaType","q","media_type"],"sources":["/Users/aishikasaha/Downloads/react-nasa-api-master/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    if (error.response?.status === 429) {\n      throw new Error('Rate limit exceeded. Please try again later.');\n    }\n    \n    if (error.response?.status >= 500) {\n      throw new Error('Server error. Please try again later.');\n    }\n    \n    throw error;\n  }\n);\n\n// API methods\nexport const nasaAPI = {\n  // APOD endpoints\n  getAPOD: (date) => api.get('/apod', { params: { date } }),\n  getRandomAPOD: () => api.get('/apod/random'),\n  \n  // Mars rover endpoints\n  getMarsPhotos: (rover, sol, page) => \n    api.get('/mars/photos', { params: { rover, sol, page } }),\n  \n  // Near Earth Objects\n  getNearEarthObjects: (startDate, endDate) => \n    api.get('/neo', { params: { start_date: startDate, end_date: endDate } }),\n  \n  // NASA Library search\n  searchLibrary: (query, mediaType) => \n    api.get('/search', { params: { q: query, media_type: mediaType } })\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,WAAAF,cAAA,GAAUD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,eAAeL,MAAM,CAACM,GAAG,EAAE,CAAC;EAC9E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACTX,OAAO,CAACK,KAAK,CAAC,YAAY,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAIP,KAAK,CAACQ,OAAO,CAAC;EAElE,IAAI,EAAAH,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAEA,IAAI,EAAAJ,gBAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,KAAI,GAAG,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EAEA,MAAMV,KAAK;AACb,CACF,CAAC;;AAED;AACA,OAAO,MAAMW,OAAO,GAAG;EACrB;EACAC,OAAO,EAAGC,IAAI,IAAK5B,GAAG,CAAC6B,GAAG,CAAC,OAAO,EAAE;IAAEC,MAAM,EAAE;MAAEF;IAAK;EAAE,CAAC,CAAC;EACzDG,aAAa,EAAEA,CAAA,KAAM/B,GAAG,CAAC6B,GAAG,CAAC,cAAc,CAAC;EAE5C;EACAG,aAAa,EAAEA,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,KAC9BnC,GAAG,CAAC6B,GAAG,CAAC,cAAc,EAAE;IAAEC,MAAM,EAAE;MAAEG,KAAK;MAAEC,GAAG;MAAEC;IAAK;EAAE,CAAC,CAAC;EAE3D;EACAC,mBAAmB,EAAEA,CAACC,SAAS,EAAEC,OAAO,KACtCtC,GAAG,CAAC6B,GAAG,CAAC,MAAM,EAAE;IAAEC,MAAM,EAAE;MAAES,UAAU,EAAEF,SAAS;MAAEG,QAAQ,EAAEF;IAAQ;EAAE,CAAC,CAAC;EAE3E;EACAG,aAAa,EAAEA,CAACC,KAAK,EAAEC,SAAS,KAC9B3C,GAAG,CAAC6B,GAAG,CAAC,SAAS,EAAE;IAAEC,MAAM,EAAE;MAAEc,CAAC,EAAEF,KAAK;MAAEG,UAAU,EAAEF;IAAU;EAAE,CAAC;AACtE,CAAC;AAED,eAAe3C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}