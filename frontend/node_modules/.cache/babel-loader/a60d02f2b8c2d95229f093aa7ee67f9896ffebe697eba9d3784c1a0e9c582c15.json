{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { nasaAPI } from '../services/api';\nexport const useAPOD = (date = \"2025-06-21\") => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchAPOD = useCallback(async (selectedDate = date) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await nasaAPI.getAPOD(selectedDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch APOD');\n    } finally {\n      setLoading(false);\n    }\n  }, [date]);\n  useEffect(() => {\n    fetchAPOD();\n  }, [fetchAPOD]);\n  const getRandomAPOD = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await nasaAPI.getRandomAPOD();\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch random APOD');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchAPOD,\n    getRandomAPOD\n  };\n};\n_s(useAPOD, \"nJrWFu614TFkx2+4OIeUvetg5v0=\");\nexport const useMarsPhotos = (rover = 'curiosity', sol = 1000) => {\n  _s2();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchPhotos = useCallback(async (selectedRover = rover, selectedSol = sol) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await nasaAPI.getMarsPhotos(selectedRover, selectedSol);\n      setData(response.data.data.photos || []);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch Mars photos');\n    } finally {\n      setLoading(false);\n    }\n  }, [rover, sol]);\n  useEffect(() => {\n    fetchPhotos();\n  }, [fetchPhotos]);\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchPhotos\n  };\n};\n_s2(useMarsPhotos, \"g65FzyQPvOZjY9HSjSPcbgTqHFU=\");\nexport const useNearEarthObjects = (startDate, endDate) => {\n  _s3();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchNEOs = useCallback(async () => {\n    if (!startDate || !endDate) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await nasaAPI.getNearEarthObjects(startDate, endDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch NEO data');\n    } finally {\n      setLoading(false);\n    }\n  }, [startDate, endDate]);\n  useEffect(() => {\n    fetchNEOs();\n  }, [fetchNEOs]);\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchNEOs\n  };\n};\n_s3(useNearEarthObjects, \"OKYE/oGukYs+YFQ7YlXLHG5PVPw=\");","map":{"version":3,"names":["useState","useEffect","useCallback","nasaAPI","useAPOD","date","_s","data","setData","loading","setLoading","error","setError","fetchAPOD","selectedDate","response","getAPOD","err","message","getRandomAPOD","refetch","useMarsPhotos","rover","sol","_s2","fetchPhotos","selectedRover","selectedSol","getMarsPhotos","photos","useNearEarthObjects","startDate","endDate","_s3","fetchNEOs","getNearEarthObjects"],"sources":["/Users/aishikasaha/Documents/nasa-react-express-app/frontend/src/hooks/useNasaData.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { nasaAPI } from '../services/api';\n\nexport const useAPOD = (date =\"2025-06-21\") => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchAPOD = useCallback(async (selectedDate = date) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getAPOD(selectedDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch APOD');\n    } finally {\n      setLoading(false);\n    }\n  }, [date]);\n\n  useEffect(() => {\n    fetchAPOD();\n  }, [fetchAPOD]);\n\n  const getRandomAPOD = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getRandomAPOD();\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch random APOD');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, refetch: fetchAPOD, getRandomAPOD };\n};\n\nexport const useMarsPhotos = (rover = 'curiosity', sol = 1000) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchPhotos = useCallback(async (selectedRover = rover, selectedSol = sol) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getMarsPhotos(selectedRover, selectedSol);\n      setData(response.data.data.photos || []);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch Mars photos');\n    } finally {\n      setLoading(false);\n    }\n  }, [rover, sol]);\n\n  useEffect(() => {\n    fetchPhotos();\n  }, [fetchPhotos]);\n\n  return { data, loading, error, refetch: fetchPhotos };\n};\n\nexport const useNearEarthObjects = (startDate, endDate) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchNEOs = useCallback(async () => {\n    if (!startDate || !endDate) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await nasaAPI.getNearEarthObjects(startDate, endDate);\n      setData(response.data.data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch NEO data');\n    } finally {\n      setLoading(false);\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    fetchNEOs();\n  }, [fetchNEOs]);\n\n  return { data, loading, error, refetch: fetchNEOs };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}