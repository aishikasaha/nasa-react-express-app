{"ast":null,"code":"var _jsxFileName = \"/Users/aishikasaha/Downloads/react-nasa-api-master copy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport Dashboard from './components/Dashboard';\nimport FontLoader from './components/FontLoader';\nimport soundManager from './utils/soundManager';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Initialize sound manager\n    soundManager.setVolume(0.3);\n\n    // Add global click sound to all buttons\n    const addClickSounds = () => {\n      document.addEventListener('click', e => {\n        if (e.target.tagName === 'BUTTON' && !e.target.classList.contains('interactive-button')) {\n          soundManager.play('click');\n        }\n      });\n    };\n    addClickSounds();\n\n    // Add font loading class to body\n    document.body.classList.add('font-loading');\n\n    // Remove font loading class after fonts are loaded\n    setTimeout(() => {\n      document.body.classList.remove('font-loading');\n      document.body.classList.add('font-loaded');\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FontLoader, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"App\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","motion","Dashboard","FontLoader","soundManager","jsxDEV","_jsxDEV","App","_s","setVolume","addClickSounds","document","addEventListener","e","target","tagName","classList","contains","play","body","add","setTimeout","remove","children","div","className","initial","opacity","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aishikasaha/Downloads/react-nasa-api-master copy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport Dashboard from './components/Dashboard';\nimport FontLoader from './components/FontLoader';\nimport soundManager from './utils/soundManager';\nimport './App.css';\n\nfunction App() {\n  useEffect(() => {\n    // Initialize sound manager\n    soundManager.setVolume(0.3);\n    \n    // Add global click sound to all buttons\n    const addClickSounds = () => {\n      document.addEventListener('click', (e) => {\n        if (e.target.tagName === 'BUTTON' && !e.target.classList.contains('interactive-button')) {\n          soundManager.play('click');\n        }\n      });\n    };\n\n    addClickSounds();\n\n    // Add font loading class to body\n    document.body.classList.add('font-loading');\n    \n    // Remove font loading class after fonts are loaded\n    setTimeout(() => {\n      document.body.classList.remove('font-loading');\n      document.body.classList.add('font-loaded');\n    }, 3000);\n  }, []);\n\n  return (\n    <FontLoader>\n      <motion.div \n        className=\"App\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      >\n        <Dashboard />\n      </motion.div>\n    </FontLoader>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbR,SAAS,CAAC,MAAM;IACd;IACAI,YAAY,CAACK,SAAS,CAAC,GAAG,CAAC;;IAE3B;IACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3BC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;QACxC,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,KAAK,QAAQ,IAAI,CAACF,CAAC,CAACC,MAAM,CAACE,SAAS,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;UACvFb,YAAY,CAACc,IAAI,CAAC,OAAO,CAAC;QAC5B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDR,cAAc,CAAC,CAAC;;IAEhB;IACAC,QAAQ,CAACQ,IAAI,CAACH,SAAS,CAACI,GAAG,CAAC,cAAc,CAAC;;IAE3C;IACAC,UAAU,CAAC,MAAM;MACfV,QAAQ,CAACQ,IAAI,CAACH,SAAS,CAACM,MAAM,CAAC,cAAc,CAAC;MAC9CX,QAAQ,CAACQ,IAAI,CAACH,SAAS,CAACI,GAAG,CAAC,aAAa,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAACH,UAAU;IAAAoB,QAAA,eACTjB,OAAA,CAACL,MAAM,CAACuB,GAAG;MACTC,SAAS,EAAC,KAAK;MACfC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAE,CAAE;MACxBC,OAAO,EAAE;QAAED,OAAO,EAAE;MAAE,CAAE;MACxBE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAAP,QAAA,eAE5BjB,OAAA,CAACJ,SAAS;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB;AAAC1B,EAAA,CAtCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}